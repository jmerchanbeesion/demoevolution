{
  "algorithm": {
    "parameters": [],
    "statements": [
      {
        "command": "ReadConfigParameter",
        "configParameterName": "RealHazelcast",
        "variableName": "realHazelcast"
      },
      {
        "children": [
          {
            "command": "Execute",
            "expression": "InitHazelcast()"
          },
          {
            "command": "Execute",
            "expression": "HazelcastListAdd(HazelcastDefault, \"numberList\", \"one\")"
          },
          {
            "command": "Execute",
            "expression": "HazelcastListAddAll(HazelcastDefault, \"numberList\", [\"three\", \"four\"])"
          },
          {
            "command": "Execute",
            "expression": "HazelcastListAddAt(HazelcastDefault, \"numberList\", 1, \"two\")"
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListGet(HazelcastDefault, \"numberList\", 3)",
            "expression2": "\"four\"",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListIndexOf(HazelcastDefault, \"numberList\", \"three\")",
            "expression2": "2",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListSize(HazelcastDefault, \"numberList\")",
            "expression2": "4",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListRemove(HazelcastDefault, \"numberList\", \"four\")",
            "expression2": "true",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListContains(HazelcastDefault, \"numberList\", \"four\")",
            "expression2": "false",
            "operator": "=="
          },
          {
            "command": "Execute",
            "expression": "HazelcastListRemoveAt(HazelcastDefault, \"numberList\", 1)"
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListSize(HazelcastDefault, \"numberList\")",
            "expression2": "2",
            "operator": "=="
          },
          {
            "command": "Execute",
            "expression": "HazelcastListClear(HazelcastDefault, \"numberList\")"
          },
          {
            "command": "Assert",
            "expression1": "HazelcastListSize(HazelcastDefault, \"numberList\")",
            "expression2": "0",
            "operator": "=="
          },
          {
            "command": "Execute",
            "expression": "EndHazelcast()"
          }
        ],
        "command": "If",
        "expression": "^realHazelcast"
      }
    ],
    "typeReturn": "any",
    "variables": [
      {
        "name": "realHazelcast",
        "type": "boolean"
      }
    ]
  }
}