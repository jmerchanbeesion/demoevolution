{
  "algorithm": {
    "parameters": [],
    "statements": [
      {
        "command": "ReadConfigParameter",
        "configParameterName": "RealRedis",
        "variableName": "realRedis"
      },
      {
        "children": [
          {
            "command": "Execute",
            "expression": "InitRedis()"
          },
          {
            "command": "Execute",
            "expression": "RedisSet(RedisDefault, \"user_1\", \"John\")"
          },
          {
            "command": "Execute",
            "expression": "RedisSetex(RedisDefault, \"user_2\", 300, \"Mary\")"
          },
          {
            "command": "Execute",
            "expression": "RedisMset(RedisDefault, { user_3: \"Jane\", user_4: \"Bob\"})"
          },
          {
            "command": "Assert",
            "expression1": "RedisTtl(RedisDefault, \"user_2\")",
            "expression2": "1",
            "operator": ">="
          },
          {
            "command": "Assert",
            "expression1": "RedisExpire(RedisDefault, \"user_4\", 300)",
            "expression2": "1",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "RedisTtl(RedisDefault, \"user_4\")",
            "expression2": "1",
            "operator": ">="
          },
          {
            "command": "Assert",
            "expression1": "RedisGet(RedisDefault, \"user_1\")",
            "expression2": "\"John\"",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "Includes(RedisMget(RedisDefault, [ \"user_1\", \"user_3\" ]), \"Jane\")",
            "expression2": "true",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "RedisDbsize(RedisDefault)",
            "expression2": "4",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "Includes(RedisKeys(RedisDefault, \"*\"), \"user_4\")",
            "expression2": "true",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "RedisDel(RedisDefault, \"user_4\")",
            "expression2": "1",
            "operator": "=="
          },
          {
            "command": "Assert",
            "expression1": "RedisExists(RedisDefault, \"user_4\")",
            "expression2": "0",
            "operator": "=="
          },
          {
            "command": "Execute",
            "expression": "EndRedis()"
          }
        ],
        "command": "If",
        "expression": "^realRedis"
      }
    ],
    "typeReturn": "any",
    "variables": [
      {
        "name": "realRedis",
        "type": "boolean"
      }
    ]
  }
}